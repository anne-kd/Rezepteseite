/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AddNewRating {
    }
    interface ImageViewer {
        "imgAlt": string;
        "imgUrl": string;
        "imgWidth": string;
    }
    interface ListMultiplicator {
        "multiplicator": number;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface MyFooter {
    }
    interface MyRating {
        "headline": string;
        "rate": string;
    }
    interface MySocialShare {
    }
    interface RecipeIngredients {
        "multiplicator": number;
    }
    interface RecipeOverview {
        "btnGoalUrl": string;
        "btnText": string;
        "headline": string;
    }
    interface RecipePage {
        "five": string;
        "four": string;
        "image": string;
        "one": string;
        "three": string;
        "title": string;
        "two": string;
    }
    interface RecipeRatings {
    }
    interface SidebarListItem {
        "kind": string;
        "setMultiplicator": (m: number) => Promise<void>;
        "unit": string;
        "unitValue": number;
    }
    interface TitleTitleimage {
        "btnGoalUrl": string;
        "btnText": string;
        "btnVisible": boolean;
        "imageAlt": string;
        "imageUrl": string;
    }
    interface TopNav {
    }
}
declare global {
    interface HTMLAddNewRatingElement extends Components.AddNewRating, HTMLStencilElement {
    }
    var HTMLAddNewRatingElement: {
        prototype: HTMLAddNewRatingElement;
        new (): HTMLAddNewRatingElement;
    };
    interface HTMLImageViewerElement extends Components.ImageViewer, HTMLStencilElement {
    }
    var HTMLImageViewerElement: {
        prototype: HTMLImageViewerElement;
        new (): HTMLImageViewerElement;
    };
    interface HTMLListMultiplicatorElement extends Components.ListMultiplicator, HTMLStencilElement {
    }
    var HTMLListMultiplicatorElement: {
        prototype: HTMLListMultiplicatorElement;
        new (): HTMLListMultiplicatorElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLMyFooterElement extends Components.MyFooter, HTMLStencilElement {
    }
    var HTMLMyFooterElement: {
        prototype: HTMLMyFooterElement;
        new (): HTMLMyFooterElement;
    };
    interface HTMLMyRatingElement extends Components.MyRating, HTMLStencilElement {
    }
    var HTMLMyRatingElement: {
        prototype: HTMLMyRatingElement;
        new (): HTMLMyRatingElement;
    };
    interface HTMLMySocialShareElement extends Components.MySocialShare, HTMLStencilElement {
    }
    var HTMLMySocialShareElement: {
        prototype: HTMLMySocialShareElement;
        new (): HTMLMySocialShareElement;
    };
    interface HTMLRecipeIngredientsElement extends Components.RecipeIngredients, HTMLStencilElement {
    }
    var HTMLRecipeIngredientsElement: {
        prototype: HTMLRecipeIngredientsElement;
        new (): HTMLRecipeIngredientsElement;
    };
    interface HTMLRecipeOverviewElement extends Components.RecipeOverview, HTMLStencilElement {
    }
    var HTMLRecipeOverviewElement: {
        prototype: HTMLRecipeOverviewElement;
        new (): HTMLRecipeOverviewElement;
    };
    interface HTMLRecipePageElement extends Components.RecipePage, HTMLStencilElement {
    }
    var HTMLRecipePageElement: {
        prototype: HTMLRecipePageElement;
        new (): HTMLRecipePageElement;
    };
    interface HTMLRecipeRatingsElement extends Components.RecipeRatings, HTMLStencilElement {
    }
    var HTMLRecipeRatingsElement: {
        prototype: HTMLRecipeRatingsElement;
        new (): HTMLRecipeRatingsElement;
    };
    interface HTMLSidebarListItemElement extends Components.SidebarListItem, HTMLStencilElement {
    }
    var HTMLSidebarListItemElement: {
        prototype: HTMLSidebarListItemElement;
        new (): HTMLSidebarListItemElement;
    };
    interface HTMLTitleTitleimageElement extends Components.TitleTitleimage, HTMLStencilElement {
    }
    var HTMLTitleTitleimageElement: {
        prototype: HTMLTitleTitleimageElement;
        new (): HTMLTitleTitleimageElement;
    };
    interface HTMLTopNavElement extends Components.TopNav, HTMLStencilElement {
    }
    var HTMLTopNavElement: {
        prototype: HTMLTopNavElement;
        new (): HTMLTopNavElement;
    };
    interface HTMLElementTagNameMap {
        "add-new-rating": HTMLAddNewRatingElement;
        "image-viewer": HTMLImageViewerElement;
        "list-multiplicator": HTMLListMultiplicatorElement;
        "my-component": HTMLMyComponentElement;
        "my-footer": HTMLMyFooterElement;
        "my-rating": HTMLMyRatingElement;
        "my-social-share": HTMLMySocialShareElement;
        "recipe-ingredients": HTMLRecipeIngredientsElement;
        "recipe-overview": HTMLRecipeOverviewElement;
        "recipe-page": HTMLRecipePageElement;
        "recipe-ratings": HTMLRecipeRatingsElement;
        "sidebar-list-item": HTMLSidebarListItemElement;
        "title-titleimage": HTMLTitleTitleimageElement;
        "top-nav": HTMLTopNavElement;
    }
}
declare namespace LocalJSX {
    interface AddNewRating {
        "onButtonClickCancel"?: (event: CustomEvent<any>) => void;
        "onButtonClickOK"?: (event: CustomEvent<any>) => void;
        "onTextChanged"?: (event: CustomEvent<string>) => void;
        "onTitleChanged"?: (event: CustomEvent<string>) => void;
    }
    interface ImageViewer {
        "imgAlt"?: string;
        "imgUrl"?: string;
        "imgWidth"?: string;
        "onChangeImgSize"?: (event: CustomEvent<any>) => void;
        "onGetBig"?: (event: CustomEvent<any>) => void;
        "onGetSmall"?: (event: CustomEvent<any>) => void;
    }
    interface ListMultiplicator {
        "multiplicator"?: number;
        "onMultiplicatorChanged"?: (event: CustomEvent<any>) => void;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface MyFooter {
    }
    interface MyRating {
        "headline"?: string;
        "rate"?: string;
    }
    interface MySocialShare {
    }
    interface RecipeIngredients {
        "multiplicator"?: number;
    }
    interface RecipeOverview {
        "btnGoalUrl"?: string;
        "btnText"?: string;
        "headline"?: string;
    }
    interface RecipePage {
        "five"?: string;
        "four"?: string;
        "image"?: string;
        "one"?: string;
        "three"?: string;
        "title"?: string;
        "two"?: string;
    }
    interface RecipeRatings {
        "onAdd"?: (event: CustomEvent<any>) => void;
    }
    interface SidebarListItem {
        "kind"?: string;
        "unit"?: string;
        "unitValue"?: number;
    }
    interface TitleTitleimage {
        "btnGoalUrl"?: string;
        "btnText"?: string;
        "btnVisible"?: boolean;
        "imageAlt"?: string;
        "imageUrl"?: string;
    }
    interface TopNav {
    }
    interface IntrinsicElements {
        "add-new-rating": AddNewRating;
        "image-viewer": ImageViewer;
        "list-multiplicator": ListMultiplicator;
        "my-component": MyComponent;
        "my-footer": MyFooter;
        "my-rating": MyRating;
        "my-social-share": MySocialShare;
        "recipe-ingredients": RecipeIngredients;
        "recipe-overview": RecipeOverview;
        "recipe-page": RecipePage;
        "recipe-ratings": RecipeRatings;
        "sidebar-list-item": SidebarListItem;
        "title-titleimage": TitleTitleimage;
        "top-nav": TopNav;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "add-new-rating": LocalJSX.AddNewRating & JSXBase.HTMLAttributes<HTMLAddNewRatingElement>;
            "image-viewer": LocalJSX.ImageViewer & JSXBase.HTMLAttributes<HTMLImageViewerElement>;
            "list-multiplicator": LocalJSX.ListMultiplicator & JSXBase.HTMLAttributes<HTMLListMultiplicatorElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "my-footer": LocalJSX.MyFooter & JSXBase.HTMLAttributes<HTMLMyFooterElement>;
            "my-rating": LocalJSX.MyRating & JSXBase.HTMLAttributes<HTMLMyRatingElement>;
            "my-social-share": LocalJSX.MySocialShare & JSXBase.HTMLAttributes<HTMLMySocialShareElement>;
            "recipe-ingredients": LocalJSX.RecipeIngredients & JSXBase.HTMLAttributes<HTMLRecipeIngredientsElement>;
            "recipe-overview": LocalJSX.RecipeOverview & JSXBase.HTMLAttributes<HTMLRecipeOverviewElement>;
            "recipe-page": LocalJSX.RecipePage & JSXBase.HTMLAttributes<HTMLRecipePageElement>;
            "recipe-ratings": LocalJSX.RecipeRatings & JSXBase.HTMLAttributes<HTMLRecipeRatingsElement>;
            "sidebar-list-item": LocalJSX.SidebarListItem & JSXBase.HTMLAttributes<HTMLSidebarListItemElement>;
            "title-titleimage": LocalJSX.TitleTitleimage & JSXBase.HTMLAttributes<HTMLTitleTitleimageElement>;
            "top-nav": LocalJSX.TopNav & JSXBase.HTMLAttributes<HTMLTopNavElement>;
        }
    }
}
